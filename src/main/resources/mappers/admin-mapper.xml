<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "adminMapper">
  <select id="selectMember" resultMap="memberResultSet">
  
  select *
  from member
  
  </select>
  
  
  <resultMap type="Member" id="memberResultSet">
  <id column = "EMAIL_ID" property = "email"/>
  <result column = "USER_PWD" property = "pwd"/>
  <result column = "USER_NAME" property = "name"/>
  <result column = "NICKNAME" property ="nickName"/>
  <result column = "PHONE" property = "phone"/>
  <result column = "BIRTH_DATE" property = "birthday"/>
  <result column = "GENDER" property = "gender"/>
  <result column = "MEMBER_STATUS" property ="status"/>
  <result column = "CREATE_DATE" property = "createDate"/>
  <result column = "MODIFY_DATE" property = "modifyDate"/>
  <result column = "ADDRESS" property = "address"/>
  <result column = "POINT"  property = "point"/>
  <result column = "FLAVOR1" property = "radio3"/>
  <result column = "FLAVOR2" property = "radio4"/>
  <result column = "FLAVOR3" property = "radio5"/>
  <result column = "REPORT_COUNT" property = "reportCount"/>
  <result column = "PROFILE_PATH" property = "profilePath"/>
  <result column = "ORIGIN_NAME" property = "originName"/>
  <result column = "CHANGE_NAME" property = "changeName"/>
  <result column = "LOGIN_TYPE" property = "loginType"/>

  </resultMap>
  
  
  <resultMap type="Admin" id="adminResultSet">
  <id column = "admin_id" property = "id"/>
  <result column = "admin_pwd" property = "pwd"/>
  <result column = "admin_name" property = "name"/>

  
  </resultMap>
  
 <!--  회원 리스트 불러오기 -->
  <update id="updateMember">
  update member 
  set
  <if test =  "checked == 'true'">
   member_status = 'Y'
   </if>
  <if test =  "checked == 'false'">
   member_status = 'N'
   </if>
   where email_id = #{email}
  </update>
  
  
  <select id="memberCount" resultType = "_int">
  select count(*)
  from member
  
  
  </select>
  
  
  <select id="searchMember" resultMap = "memberResultSet">
  select * from
  member where email_id like '%'||#{search}||'%' or user_name like '%'||#{search}||'%'
  </select>
  
  <select id="searchCount" resultType="_int">
  select count(*) from
  member where email_id like '%'||#{search}||'%' or user_name like '%'||#{search}||'%'
  </select>
  
  
  <select id="selectAdmin" resultMap = "adminResultSet">
  select * from admin
  where admin_id = #{id} and admin_pwd = #{pwd}
  
  </select>
  
  <insert id="registerProduct" statementType="CALLABLE">
		{#{result, mode=OUT, jdbcType=INTEGER} = call insertproductfn(#{product.productName}, #{product.productPrice}, #{product.productStock}, #{product.productOneLine}, 
		#{product.productType}, #{product.boardContent}, #{product.adminId})}
	</insert>
	

	
	<!-- insert all (함수를 생성해서 불러와야하는데 실패. 시간날때 재도전) -->
<!-- 	<insert id="registerProductImage" statementType="CALLABLE"> -->
<!-- 		<foreach item="item" collection="list" index="index" open="INSERT ALL" close="select * from dual"> -->
<!-- 		into image values -->
<!-- 			(get_seq_ino('seq_ino'), #{item.changeName}, #{item.originName}, #{item.filePath}, default, #{item.fileLevel}, #{item.fileType}, #{item.boardType}, #{item.identifyNo}) 		  -->
<!-- 		</foreach> -->
		
<!-- 	</insert> -->

	<!-- union all 방식 -->
	<insert id="registerProductImage">
		insert into image
		select seq_ino.nextval, A.*, seq_pid.currval from(
		<foreach item="item" collection="list" index="index" separator="union all">
			select #{item.changeName} as CHANGE_NAME, 
				   #{item.originName} as ORIGIN_NAME,
				   #{item.filePath} as FILE_PATH,
				   sysdate as UPLOAD_DATE,
				   #{item.fileLevel} as FILE_LEVEL,
				   #{item.fileType} as FILE_TYPE,
				   #{item.boardType} as BOARD_TYPE
<!-- 				   #{item.identifyNo} as IDENTIFY_NO -->
		   from dual 		 
		</foreach>
		) A
	</insert>
	
	<select id="getListCount" resultType="_int">
		select count(*) 
		from pList
		order by product_no desc
	</select>
	
	<select id="getProductList" resultMap="productResultSet">
		select * 
		from pList
		order by product_no desc
	</select>
	
	<resultMap type="product" id="productResultSet">
		<id column="PRODUCT_NO" property="productNo"/>
		<result column="PRODUCT_NAME" property="productName"/>
		<result column="PRODUCT_PRICE" property="productPrice"/>
		<result column="PRODUCT_STOCK" property="productStock"/>
		<result column="PRODUCT_ONELINE" property="productOneLine"/>
		<result column="PRODUCT_TYPE" property="productType"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="MODIFY_DATE" property="modifyDate"/>
		<result column="BOARD_COUNT" property="boardCount"/>
		<result column="BOARD_STATUS" property="boardStatus"/>
		<result column="ADMIN_ID" property="adminId"/>
		<result column="ADMIN_NAME" property="adminName"/>
		
		<result column="TOTAL_AVG" property="totalAvg"/>
		<result column="RECOMMEND_AVG" property="recommendAvg"/>
		<result column="REORDER_AVG" property="reorderAvg"/>
		<result column="SPICY_AVG" property="spicyAvg"/>
		<result column="SWEET_AVG" property="sweetAvg"/>
		<result column="BITTER_AVG" property="bitterAvg"/>
		<result column="SALTY_AVG" property="saltyAvg"/>
		<result column="SOUR_AVG" property="sourAvg"/>
	
	</resultMap>
	
	<select id="getProductImgList" resultMap="imageResultSet">
		select *
		from image
		where board_type = 1
	</select>
	
	<resultMap type="image" id="imageResultSet">
		<id column="IMAGE_NO" property="imageNo"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="FILE_LEVEL" property="fileLevel"/>
		<result column="FILE_TYPE" property="fileType"/>
		<result column="IDENTIFY_NO" property="identifyNo"/>
	</resultMap>
  	
 	<insert id="registerTaste">
 		insert into taste_board
 		values(seq_tid.nextval, default, #{endDate}, default, default, #{productNo}, #{adminId})
 	</insert>
  	
  	<select id="selectTaste" resultMap="tasteResultSet">
  		select *
  		from taste_board
  			 join product using(product_no)
	 	where board_status='Y'
 		order by taste_no desc
  	</select>
  	
  	<resultMap type="ApplyTaste" id="tasteResultSet">
  		<id column="TASTE_NO" property="tasteNo"/>
  		<result column="START_DATE" property="startDate"/>
  		<result column="END_DATE" property="endDate"/>
  		<result column="TASTE_ING" property="tasteIng"/>
  		<result column="BOARD_STATUS" property="boardStatus"/>
  		<result column="PRODUCT_NO" property="productNo"/>
  		<result column="ADMIN_ID" property="adminId"/>
  		<result column="PRODUCT_NAME" property="productName"/>
  		
  	</resultMap>
  	
  	<select id="checkTasteIng" resultType="_int">
  		select count(*)
  		from taste_board
  		where product_no=#{productNo} and board_status = 'Y' and taste_ing = 1
  	</select>
  	
  	<update id="endApplyTaste">
  		update taste_board
  		set taste_ing = 2
  		where taste_no = #{tasteNo}
  	
  	</update>
  	
  	<update id="updateTaste">
  		update taste_board
  		set end_date=#{endDate}, taste_Ing=#{tasteIng}
  		where taste_no = #{tasteNo}
  	</update>
   <resultMap type="ProductRequest" id="requestProductResultSet">
  <id column = "REQUEST_NO" property = "requestNo"/>
  <result column = "REQUEST_PRODUCT" property = "productName"/>
  <result column = "MANUFACTURER" property = "manufacturer"/>
  <result column = "CREATE_DATE" property = "createDate"/>
  <result column = "EMAIL_ID" property = "email"/>
  </resultMap>
  
  <!-- 상품요청 정보 저장 -->
  <insert id="insertRequestProduct">
  insert into product_request 
  values (seq_reqid.nextval,#{productName},#{manufacturer},default,#{email})
  </insert>
  
  <!-- 상품요청 리스트 불러오기 -->
  <select id="selectRequestProductList" resultMap= "requestProductResultSet">
  select * from 
  product_request
  </select>
</mapper>
